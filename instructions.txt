Here are instructions to get the ARX R5 arm functioning using this repository. Created by Nate and Ashley on 25/08/01.


## Prerequisites
- ARX R5 arm connected via USB (through CAN adapter)
- Power supply connected (red lights on power board and arm should be on)
- Green light on CAN adapter should be on

## Simple Setup Process

### Step 0: Find your CAN adapter device
```bash
# Check which device your CAN adapter is connected as:
ls -la /dev/ttyACM* /dev/ttyUSB*

# You should see something like /dev/ttyACM0, /dev/ttyACM1, or /dev/ttyUSB0
# If multiple devices are shown, unplug the CAN adapter, run the command again,
# then plug it back in and run once more to see which device appears
```

### Step 1: Set up CAN interface
```bash
# Replace /dev/ttyACM0 with your actual device from Step 0

# This creates a CAN network interface from your USB device
sudo slcand -o -f -s8 /dev/ttyACM0 can0

# This activates the CAN interface (use 'ip' instead of deprecated 'ifconfig')
sudo ip link set can0 up
```

### Step 2: In a new terminal, run the Python test
```bash
# Go to the Python SDK directory
cd /home/vassar/code/R5/py/ARX_R5_python

# Set up the environment (combines setup.sh and PYTHONPATH)
source setup.sh && export PYTHONPATH=$(pwd)/bimanual/api:$PYTHONPATH

# If using conda, activate your environment that has the dependencies
conda activate kscale  # or whichever environment has pybind11, etc.

# Run the keyboard control test
python test_keyboard.py
```

## Troubleshooting

- **"command not found" for `slcand`**: Install with `sudo apt install can-utils`
- **"Socket not open" errors**: Check if can0 exists with `ip link show can0`
- **"ModuleNotFoundError"**: Make sure you have the required Python packages (pybind11, etc.)

## Keyboard Controls for test_keyboard.py

Once the program is running, use these keys to control the arm:

**Movement:**
- `w/s` - Move forward/backward (X axis)
- `a/d` - Move left/right (Y axis)
- `↑/↓` arrows - Move up/down (Z axis)
- `←/→` arrows - Also move left/right (Y axis)

**Rotation:**
- `m/n` - Rotate roll
- `l/.` - Rotate pitch  
- `,//` - Rotate yaw

**Gripper:**
- `c` - Close gripper
- `o` - Open gripper

**Other:**
- `i` - Enable gravity compensation mode
- `r` - Return to home position
- `q` - Quit program
